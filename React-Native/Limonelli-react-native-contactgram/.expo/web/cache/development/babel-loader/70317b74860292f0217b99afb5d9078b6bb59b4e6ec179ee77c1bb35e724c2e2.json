{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { Camera, CameraType } from \"expo-camera\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../redux/actions/accountActions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ProfileScreen = function ProfileScreen(_ref) {\n  var _account$date, _account$date2, _account$date3;\n  var navigation = _ref.navigation;\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    image = _useState2[0],\n    setImage = _useState2[1];\n  var _useState3 = useState(CameraType.back),\n    _useState4 = _slicedToArray(_useState3, 2),\n    type = _useState4[0],\n    setType = _useState4[1];\n  var _Camera$useCameraPerm = Camera.useCameraPermissions(),\n    _Camera$useCameraPerm2 = _slicedToArray(_Camera$useCameraPerm, 2),\n    permission = _Camera$useCameraPerm2[0],\n    requestPermission = _Camera$useCameraPerm2[1];\n  var dispatch = useDispatch();\n  var _useSelector = useSelector(function (state) {\n      return state.accountReducer;\n    }),\n    account = _useSelector.account;\n  var pickImage = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      ImagePicker.requestMediaLibraryPermissionsAsync;\n      var result = yield ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 1\n      });\n      if (result.assets) {\n        setImage(result.assets[0].uri);\n      }\n    });\n    return function pickImage() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var supportedURL = \"https://google.com\";\n  var handlePress = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      var supported = yield Linking.canOpenURL(supportedURL);\n      if (supported) {\n        yield Linking.openURL(\"tel:(257)832-5149\");\n      }\n    });\n    return function handlePress() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"ProfileScreen\"\n    }), _jsx(Button, {\n      title: \"Go to Setting\",\n      color: \"red\",\n      onPress: function onPress() {\n        return navigation == null ? void 0 : navigation.navigate(\"Setting\", {\n          setting: \"Default\"\n        });\n      }\n    }), image && _jsx(Image, {\n      source: {\n        uri: image\n      },\n      style: {\n        width: 200,\n        height: 200\n      }\n    }), _jsxs(Text, {\n      children: [\"Email: \", account == null ? void 0 : account.email]\n    }), _jsxs(Text, {\n      children: [\"Born: \", ((_account$date = account.date) == null ? void 0 : _account$date.getDay) + '/' + ((_account$date2 = account.date) == null ? void 0 : _account$date2.getMonth) + '/' + ((_account$date3 = account.date) == null ? void 0 : _account$date3.getFullYear)]\n    }), _jsxs(Text, {\n      children: [\"Logged: \", String(account == null ? void 0 : account.isLogged), \" ?\"]\n    }), _jsx(Button, {\n      title: \"Choice photo\",\n      color: \"blue\",\n      onPress: pickImage\n    }), _jsx(Button, {\n      title: \"Open Link\",\n      color: \"blue\",\n      onPress: handlePress\n    }), _jsx(Button, {\n      title: \"Logout\",\n      color: \"blue\",\n      onPress: function onPress() {\n        return dispatch(logout());\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nexport default ProfileScreen;","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","Button","Image","Linking","ImagePicker","Camera","CameraType","useDispatch","useSelector","logout","jsx","_jsx","jsxs","_jsxs","ProfileScreen","_ref","_account$date","_account$date2","_account$date3","navigation","_useState","_useState2","_slicedToArray","image","setImage","_useState3","back","_useState4","type","setType","_Camera$useCameraPerm","useCameraPermissions","_Camera$useCameraPerm2","permission","requestPermission","dispatch","_useSelector","state","accountReducer","account","pickImage","_ref2","_asyncToGenerator","requestMediaLibraryPermissionsAsync","result","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","assets","uri","apply","arguments","supportedURL","handlePress","_ref3","supported","canOpenURL","openURL","style","styles","container","children","title","color","onPress","navigate","setting","source","width","height","email","date","getDay","getMonth","getFullYear","String","isLogged","create","flex","alignItems","justifyContent"],"sources":["C:/xampp/htdocs/Universit√†/Steve-Jobs/React-Native/React-Native-Limonelli-Francesco/src/screen/ProfileScreen.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { View, Text, StyleSheet, Button, Image, Linking } from \"react-native\";\nimport { CustomScreenFC } from \"../models/ScreenFC\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { Camera, CameraType } from \"expo-camera\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AccountProps, logout } from \"../redux/actions/accountActions\";\n\nconst ProfileScreen: CustomScreenFC<\"Profile\"> = ({ navigation }) => {\n  const [image, setImage] = useState<string>();\n  const [type, setType] = useState(CameraType.back);\n  const [permission, requestPermission] = Camera.useCameraPermissions();\n\n  const dispatch = useDispatch();\n\n  const { account } = useSelector(\n    (state: { accountReducer: AccountProps }) => state.accountReducer\n  );\n\n  const pickImage = async () => {\n    ImagePicker.requestMediaLibraryPermissionsAsync\n    const result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n\n    if (result.assets) {\n      setImage(result.assets[0].uri);\n    }\n  };\n\n  // ImagePicker.requestMediaLibraryPermissionsAsync()\n\n  const supportedURL = \"https://google.com\";\n\n  const handlePress = async () => {\n    const supported = await Linking.canOpenURL(supportedURL);\n    if (supported) {\n      // await Linking.openURL(supportedURL);\n      // await Linking.openSettings();\n      // await Linking.openURL(\"mailto:lenda.ortiz@example.com\");\n      await Linking.openURL(\"tel:(257)832-5149\");\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text>ProfileScreen</Text>\n      <Button\n        title=\"Go to Setting\"\n        color=\"red\"\n        onPress={() => navigation?.navigate(\"Setting\", { setting: \"Default\" })}\n      />\n      {image && (\n        <Image source={{ uri: image }} style={{ width: 200, height: 200 }} />\n      )}\n      <Text>Email: {account?.email}</Text>\n      <Text>Born: {account.date?.getDay+ '/' + account.date?.getMonth + '/' + account.date?.getFullYear}</Text>\n      <Text>Logged: {String(account?.isLogged)} ?</Text>\n      <Button title=\"Choice photo\" color=\"blue\" onPress={pickImage} />\n      <Button title=\"Open Link\" color=\"blue\" onPress={handlePress} />\n      <Button title=\"Logout\" color=\"blue\" onPress={() => dispatch(logout())} />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n\nexport default ProfileScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}